{"version":3,"sources":["frontend/Form.js","frontend/Homepage.js","middleend/fetchers.js","frontend/Sessionpage.js","frontend/Topbar.js","frontend/ActivitiesPage.js","frontend/ActivityForm.js","App.js","frontend/Dashboard.js","serviceWorker.js","index.js"],"names":["Component","Homepage","react_default","a","createElement","class","Card","bg","text","style","width","Header","Body","Title","Text","root","enrollment_list_endpoint","activity_list_endpoint","activity_create_endpoint","error_handler","err","console","log","fetch_all_enrollments","on_success","on_error","arguments","length","undefined","fetch","then","response","status","json","data","fetch_all_activities","create_activity","activity_information","real_endpoint","conf","method","body","JSON","stringify","headers","Headers","Content-Type","Sessionpage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","enrollments","loaded","placeholder","_this2","setState","error","p","table","i","e","row","push","Table","Cell","activity","title","child","last_name","confirmed","Row","key","children","L","enrollment_status","filter","enrollment","confirmed_enrollments","filterByStatus","pending_enrollments","columns","accessor","Segment","Grid","divided","Column","as","color","Icon","name","Content","Subheader","es","defaultPageSize","Topbar","activeItem","handleItemClick","_ref","history","bind","assertThisInitialized","Menu","pointing","inverted","position","Item","active","onClick","withRouter","ActivitiesPage","activities","createNew","Button","content","ActivityForm","youngest_enrolled","oldest_enrolled","start_date","end_date","days_of_occurrence","start_time","end_time","max_enrollment","datesRange","handleChange","handleSubmit","event","t","result","time","substr","indexOf","suffix","hour","minute","parseInt","toString","trim","parse_time","clearForm","form","reset","value","hasOwnProperty","defineProperty","h","Container","lib","ref","onSubmit","Group","widths","Input","onChange","required","label","validations","errorLabel","Label","validationErrors","isWords","isDefaultRequiredValue","isNumeric","Field","control","DatesRangeInput","closable","dateFormat","iconPosition","Dropdown","fluid","multiple","search","selection","options","commonjs","timeFormat","TimeInput","type","App","react_router_dom","frontend_Topbar","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3bc0a1e0.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { Label, Container, Divider} from 'semantic-ui-react';\nimport {\n    Form, Dropdown, \n  } from 'formsy-semantic-ui-react';\n\nimport nodemailer from 'nodemailer';\nimport * as emailjs from 'emailjs-com';\n\nexport default class SignupForm extends Component {\n    validate() {\n        return true;\n    };\n\n    onSubmit(event) {\n        console.log(event);\n        this.setState(event, this.sendEmail());\n    };\n\n    handleSubmit(event) {\n        console.log('hello');\n        return;\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            'firstName' : '',\n            'lastName' : '',\n            'parentEmail' : '',\n            'activities' : ''\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.different = this.different.bind(this);\n        // this.handleSubmit = this.handleSubmit.bind(this);\n        // this.MyForm = this.MyForm.bind(this);\n    };\n    print_state() {\n        console.log(this.state);\n    }\n    handleChange(e) {\n        const {value, name} = e.target;\n        this.setState({[name]:value}, this.print_state)\n\n    }\n    different(e) {\n        console.log(e);\n    }\n\n    sendEmail() {\n        var templateParams = {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.parentEmail\n        };\n        var template_id = \"confirmation\";\n\n        emailjs.send('gmail', template_id, templateParams, 'user_KIEZofYHFznf8LEaasyPx')\n            .then(function(response) {\n               console.log('SUCCESS!', response.status, response.text);\n            }, function(err) {\n               console.log('FAILED...', err);\n        });\n        this.form.reset();\n    }\n\n\n    render() {\n        var opts = {\n            'a' : 'Unlimited Pool and Ice Rink Access (all ages, do not select again if you already have access)',\n            'b' : 'Leather Crafting March 11-14 at KBM 3:30 - 5:30 p.m. Heritage Center Ages 6-18',\n            'c' : 'KBM Spring Break Rock Climbing Club mornings (10 a.m. to noon) March 11-14 for students age 8-14',\n            'd' : 'Spring Arts 2019',\n            'd1' : 'Relief Printing with Hailey Davis, 10 a.m. to noon, March 11-15 for ages 8 - 11',\n            'd2' : 'Explore Acrylics with Erica Ross, 1 - 3 p.m., March 11-15 for ages 8 - 11',\n            'd3' : 'Theatre Games with the ShakesBears 10 a.m. to noon March for ages 9 - 12',\n        };\n        var options = [\n            { text: opts['a'], value: 'a' },\n            { text: opts['b'], value: 'b' },\n            { text: opts['c'], value: 'c' },\n            { text: opts['d'] + \" - \" + opts['d1'], value: 'd1' },\n            { text: opts['d'] + \" - \" + opts['d2'], value: 'd2' },\n            { text: opts['d'] + \" - \" + opts['d3'], value: 'd3' },\n        ];\n        var layoutChoice = 'vertical';\n        // var s = this.onSubmit;\n        var h = this.handleChange;\n        var styles = {\n            root: {\n              marginTop: 18,\n              // padding: '0 24px 24px 24px',\n            },\n          \n            customErrorLabel: {\n              color: '#f00',\n              textAlign: 'center',\n            },\n          };\n        return (\n            <Container>\n                <Form\n                    ref={ ref => this.form = ref }\n                    onSubmit={this.onSubmit}\n                    // layout={layoutChoice}\n                >\n                    <Form.Group widths=\"equal\">\n                    {/* First name */}\n                    <Form.Input\n                        onChange={h}\n                        required\n                        name=\"firstName\"\n                        label=\"Child's First name\"\n                        placeholder=\"First Name\"\n                        validations=\"isWords\"\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        validationErrors={{\n                            isWords: 'No numbers or special characters allowed',\n                            isDefaultRequiredValue: 'First Name is Required',\n                        }}\n                    />\n                    {/* Last name */}\n                    <Form.Input\n                        onChange={h}\n                        name=\"lastName\"\n                        placeholder=\"Last name\"\n                        label=\"Child's Last name\"\n                        required\n                        validations=\"isWords\"\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        validationErrors={{\n                            isWords: 'No numbers or special characters allowed',\n                            isDefaultRequiredValue: 'Last Name is Required',\n                        }}\n                    />\n                    </Form.Group>\n\n                    <Divider/>\n\n                    {/* parent email */}\n                    <Form.Input\n                        onChange={h}\n                        name=\"parentEmail\"\n                        placeholder=\"Email\"\n                        icon=\"mail\"\n                        label=\"Parent/Guardian Email\"\n                        required\n                        validations=\"isEmail\"\n                        validationErrors={{\n                            isEmail: 'This is not a valid email',\n                            isDefaultRequiredValue: 'Email is Required',\n                        }}\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        style={ styles.formElement }\n                    />\n                    <Divider/>\n                    <Dropdown\n                        onChange={this.different}\n                        name=\"activities\"\n                        label=\"Activities For Enrollment\"\n                        placeholder=\"Select Activity\"\n                        multiple\n                        search\n                        selection\n                        validations={{\n                            customValidation: (values, value) => !(!value || value.length < 1),\n                        }}\n                        validationErrors={{\n                            customValidation: 'Please select at least one activity',\n                        }}\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        options={ options }\n                    />\n                    <Form.Group>\n                        <Form.Button content=\"Submit\" color=\"green\"/>\n                        <Form.Button type=\"button\" content=\"Reset\" onClick={ () => this.form.reset() }/>\n                    </Form.Group>\n                </Form>\n\n            </Container>\n        );\n    }\n\n}\n\n","import React, {Component} from 'react';\nimport './Homepage.css';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Card,\n  Button,\n  Table,\n} from 'react-bootstrap';\n\n\n\nexport default class Homepage extends Component {\n    render() {\n        return (\n        // <>\n        <div>\n        \n        <div class = 'infoCards'>\n          <div class = 'card1'>\n          <Card bg=\"primary\" text=\"white\" style={{ width: '18rem' }}>\n            <Card.Header>Header</Card.Header>\n            <Card.Body>\n              <Card.Title>Primary Card Title</Card.Title>\n              <Card.Text>\n                Some quick example text to build on the card title and make up the bulk\n                of the card's content.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          </div>\n\n          <div class = 'card2'>\n          <Card bg=\"secondary\" text=\"white\" style={{ width: '18rem' }}>\n            <Card.Header>Header</Card.Header>\n            <Card.Body>\n              <Card.Title>Secondary Card Title</Card.Title>\n              <Card.Text>\n                Some quick example text to build on the card title and make up the bulk\n                of the card's content.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          </div>\n\n          <div class = 'card3'>\n          <Card bg=\"success\" text=\"white\" style={{ width: '18rem' }}>\n            <Card.Header>Header</Card.Header>\n            <Card.Body>\n              <Card.Title>Success Card Title</Card.Title>\n              <Card.Text>\n                Some quick example text to build on the card title and make up the bulk\n                of the card's content.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          </div>\n\n          <div class = 'card4'>\n          <Card bg=\"danger\" text=\"white\" style={{ width: '18rem' }}>\n            <Card.Header>Header</Card.Header>\n            <Card.Body>\n              <Card.Title>Danger Card Title</Card.Title>\n              <Card.Text>\n                Some quick example text to build on the card title and make up the bulk\n                of the card's content.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          </div>\n\n          <div class = 'card5'>\n          <Card bg=\"warning\" text=\"white\" style={{ width: '18rem' }}>\n            <Card.Header>Header</Card.Header>\n            <Card.Body>\n              <Card.Title>Warning Card Title</Card.Title>\n              <Card.Text>\n                Some quick example text to build on the card title and make up the bulk\n                of the card's content.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          </div>\n          </div>\n{/*\n         <div class = 'table1'>\n        <Table responsive>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Table heading</th>\n              <th>Table heading</th>\n              <th>Table heading</th>\n              <th>Table heading</th>\n              <th>Table heading</th>\n              <th>Table heading</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>1</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n            </tr>\n            <tr>\n              <td>2</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n            </tr>\n            <tr>\n              <td>3</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n            </tr>\n          </tbody>\n        </Table>;\n        </div> \n        */}\n        </div>\n        );\n    }\n\n}","// CONSTANTS\n// const enrollment_list_endpoint = \"http://127.0.0.1:8000/api/enrollments\";\n// const endpoint = \"http://127.0.0.1:8000/api/enrollments/\";\nconst root = \"https://banana-tart-91724.herokuapp.com\";\nconst enrollment_list_endpoint = \"/api/enrollments/\";\nconst parent_list_endpoint = \"/api/parents/\";\nconst child_list_endpoint = \"/api/children/\";\nconst activity_list_endpoint = \"/api/activities/\";\nconst activity_create_endpoint = \"/api/make_activity/\";\n\nfunction error_handler(err) {\n    console.log(err);\n}\n\n// Enrollment\nexport function fetch_all_enrollments(on_success, on_error=(error_handler)) {\n    const stuff = {\n        // headers: new Headers({'Access-Control-Allow-Origin': '*'})\n        method: \"GET\",\n        // body: JSON.stringify(user),\n        // headers: new Headers({ \"Content-Type\": \"application/json\" })\n    };\n    const real_endpoint = root + enrollment_list_endpoint;\n    fetch(real_endpoint)\n    .then(response => {\n        if (response.status !== 200) {\n            on_error(response);\n        } else {\n            console.log(response);\n            return response.json();\n        }\n    })\n    .then(data => on_success(data));\n}\n\nexport function fetch_all_activities(on_success, on_error=(error_handler)) {\n    const real_endpoint = root + activity_list_endpoint;\n    fetch(real_endpoint)\n    .then(response => {\n        if (response.status !== 200) {\n            on_error(response);\n        } else {\n            console.log(response);\n            return response.json();\n        }\n    })\n    .then(data => on_success(data));\n}\n\nexport function create_activity(activity_information) {\n    const real_endpoint = root + activity_create_endpoint;\n    const conf = {\n        method: \"POST\",\n        body: JSON.stringify(activity_information),\n        headers: new Headers({ \"Content-Type\": \"application/json\" })\n    };\n    console.log(JSON.stringify(activity_information));\n    fetch(real_endpoint, conf).then(response => console.log(response));\n}","import React, { Component } from \"react\";\nimport {Table, Header, Grid, Segment, Icon} from 'semantic-ui-react';\nimport ReactTable from 'react-table';\nimport {\n  fetch_all_enrollments\n} from '../middleend/fetchers';\n\nexport default class Sessionpage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      enrollments: [],\n      loaded: false,\n      placeholder: \"Loading...\",\n    };\n  \n  }\n\n  async componentDidMount() {\n    // const res = await fetch('http://127.0.0.1:8000/api/enrollments/');\n    // const todos = await res.json();\n    // console.log(todos);\n    // this.setState({ enrollments: todos, loaded: true });\n    fetch_all_enrollments(\n      response => { this.setState({ enrollments: response, loaded: true }, () => console.log(this.state.enrollments)); },\n      error    => { this.setState({ placeholder: \"Something went wrong.\" }); },\n    )\n  }\n\n  renderEnrollment(p) {\n    // const url = \"/project\" + p.id;\n    const style = {\n      margin: '20px', \n      display:'inline-block',\n      width: '20em',\n    };\n    return (\n        {/* <Link to={ url }>\n          <Block\n            title={ \"Project\" + p.id }\n            description=\"would be in a list\"\n           />\n          </Link> */}\n          // <React.Fragment>\n          //   <Table.Row>\n          //     <Table.Cell>\n          //       {p.activity.title}\n          //     </Table.Cell>\n          //     <Table.Cell>\n          //       {p.child.last_name}\n          //     </Table.Cell>\n          //     <Table.Cell>\n          //       {p.confirmed ? \"Enrolled\" : \"Pending Approval\"}\n          //     </Table.Cell>\n          //   </Table.Row>\n          // </React.Fragment>\n    )\n  }\n  createTable() {\n    let table = []\n\n    // Outer loop to create parent\n    console.log(this.state);\n    for (let i = 0; i < this.state['enrollments'].length; i++) {\n      let e = this.state['enrollments'][i];\n      console.log(e);\n      let row = [];\n      row.push(\n        <Table.Cell>\n          {e.activity.title}\n        </Table.Cell>\n      );\n      row.push(\n        <Table.Cell>\n          {e.child.last_name}\n        </Table.Cell>\n      );\n      row.push(\n        <Table.Cell>\n          {e.confirmed ? \"Enrolled\" : \"Pending Approval\"}\n        </Table.Cell>\n      );\n      //Create the parent and add the children\n      // table.push(<tr>{children}</tr>)\n      table.push(<Table.Row key={i} children={row} />)\n    }\n    return table\n  }\n\n  filterByStatus(L, enrollment_status) {\n    var result = L.filter(enrollment => enrollment.confirmed === enrollment_status);\n    return result;\n  }\n\n  render() {\n    const confirmed_enrollments = this.filterByStatus(this.state.enrollments, true);\n    const pending_enrollments = this.filterByStatus(this.state.enrollments, false);\n    const columns = [\n      {\n        Header: 'Activity',\n        accessor: 'activity.title' // String-based value accessors!\n      },\n      {\n        Header: 'Child',\n        accessor: 'child.last_name' // String-based value accessors!\n      },\n      // {\n      //   Header: 'Status',\n      //   accessor: 'confirmed', // String-based value accessors!\n      //   Cell: props =>\n      // },\n    ];\n\n    return (\n      <Segment>\n      <Grid columns={2} divided>\n      <Grid.Column >\n            <Header as='h2'color='green'>\n              <Icon name='checkmark' />\n              <Header.Content>\n                Confirmed \n                <Header.Subheader>Manage Confirmed Enrollments</Header.Subheader>\n              </Header.Content>\n            </Header>\n            <ReactTable defaultPageSize=\"10\"data={pending_enrollments} columns={columns} />\n      </Grid.Column>\n      <Grid.Column >\n            <Header as='h2'color='orange'>\n              <Icon name='exclamation' />\n              <Header.Content>\n                Pending \n                <Header.Subheader>Manage Pending Enrollments</Header.Subheader>\n              </Header.Content>\n            </Header>\n            <ReactTable defaultPageSize=\"10\"data={confirmed_enrollments} columns={columns} />\n      </Grid.Column>\n      </Grid>\n      </Segment>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Input, Label, Menu, Header , Button} from 'semantic-ui-react'\nimport { BrowserRouter as Router, Route, Link, NavLink, withRouter} from \"react-router-dom\";\nimport Sessionpage from './Sessionpage';\nimport './Homepage.css';\n\n\nclass Topbar extends Component {\n  state = { activeItem: 'home' }\n  constructor(props) {\n    super(props);\n    this.handleItemClick = this.handleItemClick.bind(this);\n  }\n  handleItemClick = (e, { name }) => {\n    this.setState({ activeItem: name })\n    this.props.history.push(\"/\" + name);\n  }\n  render() {\n    const { activeItem } = this.state\n    return (\n      <Menu pointing>\n          <Header as='h1' color='blue'>\n            <Header.Content>\n              Kodiak Island Borough School District\n              <Header.Subheader inverted color='green'>\n                Engaged in Learning. Prepared for Life.\n              </Header.Subheader>\n            </Header.Content>\n          </Header>\n        <Menu.Menu position=\"right\">\n          <Menu.Item name='home' active={activeItem === 'home'} onClick={this.handleItemClick}>\n          </Menu.Item>\n\n          <Menu.Item name='sessions' active={activeItem === 'sessions'} onClick={this.handleItemClick}>\n          </Menu.Item>\n\n          <Menu.Item name='activities' active={activeItem === 'activities'} onClick={this.handleItemClick}>\n          </Menu.Item>\n        </Menu.Menu>\n      </Menu>\n\n    );\n  }\n}\nexport default withRouter(Topbar);","import React, { Component } from \"react\";\nimport {Table, Header, Segment, Button} from 'semantic-ui-react';\nimport ReactTable from 'react-table';\nimport {Link, withRouter} from 'react-router-dom';\n\nimport {\n  fetch_all_activities\n} from '../middleend/fetchers';\n\nclass ActivitiesPage extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"here!\");\n    this.state = {\n      activities: [],\n      loaded: false,\n      placeholder: \"Loading...\",\n    };\n    this.createNew = this.createNew.bind(this);\n  \n  }\n\n  async componentDidMount() {\n    // const res = await fetch('http://127.0.0.1:8000/api/enrollments/');\n    // const todos = await res.json();\n    // console.log(todos);\n    // this.setState({ enrollments: todos, loaded: true });\n    fetch_all_activities(\n      response => { this.setState({ activities: response, loaded: true }, () => console.log(this.state.enrollments)); },\n      error    => { this.setState({ placeholder: \"Something went wrong.\" }); },\n    )\n    // this.createTable();\n  }\n  createNew() {\n    this.props.history.push(\"/activity\");\n  }\n\n  render() {\n    // const confirmed_enrollments = this.filterByStatus(this.state.enrollments, true);\n    const activities = this.state.activities;\n    const columns = [\n      {\n        Header: 'Activity',\n        accessor: 'title' // String-based value accessors!\n      },\n      {\n        Header: 'Start Date',\n        accessor: 'start_date' // String-based value accessors!\n      },\n      {\n        Header: 'End Date',\n        accessor: 'end_date' // String-based value accessors!\n      },\n      // {\n      //   Header: 'Status',\n      //   accessor: 'confirmed', // String-based value accessors!\n      //   Cell: props =>\n      // },\n    ];\n\n    return (\n      <Segment>\n          <Header as='h2'color='olive'>\n            <Header.Content>\n              Activities \n              <Header.Subheader>Manage Activities</Header.Subheader>\n            </Header.Content>\n          </Header>\n          <ReactTable defaultPageSize={5}data={activities} columns={columns} />\n            {/* <Form.Button content=\"Submit\" color=\"green\"/> */}\n           <Button content=\"Create New\" color='green' onClick={this.createNew}/>\n      </Segment>\n    );\n  };\n\n  // createTable() {\n  //   let table = []\n\n  //   // Outer loop to create parent\n  //   // console.log(this.state);\n  //   for (let i = 0; i < this.state['activities'].length; i++) {\n  //     let a = this.state['activities'][i];\n  //     console.log(a);\n  //     let row = [];\n  //     row.push(\n  //       <Table.Cell>\n  //         {a.title}\n  //       </Table.Cell>\n  //     );\n  //     row.push(\n  //       <Table.Cell>\n  //         {a.start_date}\n  //       </Table.Cell>\n  //     );\n  //     row.push(\n  //       <Table.Cell>\n  //         {a.end_date}\n  //       </Table.Cell>\n  //     );\n  //     //Create the parent and add the children\n  //     // table.push(<tr>{children}</tr>)\n  //     table.push(<Table.Row key={i} children={row} />)\n  //   }\n  //   return table\n  // }\n\n  // render() {\n\n  //     return ( \n  //       <div>\n  //           <Button inverted color='green'>\n  //             <Link to=\"/activity\">Create New</Link>\n  //           </Button>\n  //         <Table celled selectable>\n  //           <Table.Header>\n  //             <Table.Row>\n  //               <Table.HeaderCell>Activity</Table.HeaderCell>\n  //               <Table.HeaderCell>Start Date</Table.HeaderCell>\n  //               <Table.HeaderCell>End Date</Table.HeaderCell>\n  //             </Table.Row>\n  //           </Table.Header>\n\n  //           <Table.Body>\n  //             {this.createTable()}\n  //           </Table.Body>\n  //         </Table> \n\n\n  //       </div>\n  //   );\n  // }\n}\nexport default withRouter(ActivitiesPage);","import React, {Component} from 'react';\nimport { Label, Container, Divider} from 'semantic-ui-react';\nimport {\n    Form, Dropdown, \n  } from 'formsy-semantic-ui-react';\n\nimport {create_activity} from '../middleend/fetchers';\nimport {\n    // DateInput,\n    TimeInput,\n    // DateTimeInput,\n    DatesRangeInput\n  } from 'semantic-ui-calendar-react';\n\nexport default class ActivityForm extends Component {\n    validate() {\n        return true;\n    };\n\n    onSubmit(event) {\n        console.log(event);\n        create_activity(event);\n    };\n\n    print_state() {\n        console.log(this.state);\n    }\n    parse_time(t) {\n        var time = t.substr(0, t.indexOf(\" \"));\n        var suffix = t.substr(t.indexOf(\" \")+1);\n        var result;\n        if (suffix === \"AM\") {\n            result = time;\n        } else if (suffix === \"PM\") {\n            var hour = time.substr(0, time.indexOf(\":\"));\n            var minute = time.substr(time.indexOf(\":\") + 1);\n            hour = (parseInt(hour, 10) + 12).toString();\n            result = hour + \":\" + minute;\n        }\n        return result;\n    }\n    handleSubmit(event) {\n        // console.log(event);\n        var datesRange = this.state.datesRange;\n        this.state.start_date = datesRange.substr(0, datesRange.indexOf(\"-\")).trim() //.replace(/\\//g, \"-\")\n        this.state.end_date = datesRange.substr(datesRange.indexOf(\"-\")+1).trim() //.replace(/\\//g, \"-\")\n        this.state.start_time = this.parse_time(this.state.start_time);\n        this.state.end_time = this.parse_time(this.state.end_time);\n        delete this.state.datesRange;\n        create_activity(this.state);\n        this.clearForm();\n    };\n    clearForm() {\n        this.form.reset();\n        this.setState({\n            'title' : '',\n            'youngest_enrolled' : '',\n            'oldest_enrolled' : '',\n            'start_date' : '',\n            'end_date' : '',\n            'days_of_occurrence' : '',\n            'start_time' : '',\n            'end_time' : '',\n            'max_enrollment' : '',\n            datesRange:''\n\n        })\n    }\n\n    constructor(props) {\n        super(props);\n            // \"title\": \"Activity 4\",\n            // \"youngest_enrolled\": 2\n            // \"oldest_enrolled\": 2,\n            // \"start_date\": \"2019-04-04\",\n            // \"end_date\": \"2019-04-04\",\n            // \"days_of_occurrence\": [],\n            // \"start_time\": \"18:38:04.950703\",\n            // \"end_time\": \"18:38:04.950727\",\n            // \"max_enrollment\": 2,\n            // \"enrolled_students\": [\n            //     5,\n            //     5,\n            //     10,\n            //     10\n            // ],\n        this.state = {\n            'title' : '',\n            'youngest_enrolled' : '',\n            'oldest_enrolled' : '',\n            'start_date' : '',\n            'end_date' : '',\n            'days_of_occurrence' : '',\n            'start_time' : '',\n            'end_time' : '',\n            'max_enrollment' : '',\n            datesRange:''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    };\n    handleChange(e, {name, value}) {\n        if (this.state.hasOwnProperty(name)) {\n          this.setState({ [name]: value });\n        }\n            console.log(name, value);\n        // this.setState({[name]:value}, this.print_state)\n\n    }\n    // handleChange = (event, {name, value}) => {\n    //     if (this.state.hasOwnProperty(name)) {\n    //         this.setState({ [name]: value });\n    //         console.log(name, value);\n    //     }\n    // }\n\n    render() {\n        const dayOptions = [\n            {\n              key: 0,\n              text: 'Monday',\n              value: 'MON',\n            },\n            {\n              key: 1,\n              text: 'Tuesday',\n              value: 'TUE',\n            },\n            {\n              key: 2,\n              text: 'Wednesday',\n              value: 'WED',\n            },\n            {\n              key: 3,\n              text: 'Thursday',\n              value: 'THU',\n            },\n            {\n              key: 4,\n              text: 'Friday',\n              value: 'FRI',\n            },\n            {\n              key: 5,\n              text: 'Saturday',\n              value: 'SAT',\n            },\n            {\n              key: 6,\n              text: 'Sunday',\n              value: 'SUN',\n            }\n          ]\n        var layoutChoice = 'vertical';\n        // var s = this.onSubmit;\n        var h = this.handleChange;\n        var styles = {\n            root: {\n              marginTop: 18,\n              // padding: '0 24px 24px 24px',\n            },\n          \n            customErrorLabel: {\n              color: '#f00',\n              textAlign: 'center',\n            },\n          };\n        return (\n            <Container>\n                <Form\n                    ref={ ref => this.form = ref }\n                    onSubmit={this.handleSubmit}\n                >\n                    <Form.Group widths=\"equal\">\n                    <Form.Input\n                        onChange={h}\n                        required\n                        name=\"title\"\n                        label=\"Activity Title\"\n                        placeholder=\"Bowstaffing 101\"\n                        value={this.state.title}\n                        validations=\"isWords\"\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        validationErrors={{\n                            isWords: 'No numbers or special characters allowed',\n                            isDefaultRequiredValue: 'Title is Required',\n                        }}\n                    />\n                    {/* Last name */}\n                    <Form.Input\n                        onChange={h}\n                        name=\"youngest_enrolled\"\n                        value={this.state.youngest_enrolled}\n                        placeholder=\"10\"\n                        label=\"Youngest Allowed Age\"\n                        required\n                        validations=\"isNumeric\"\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        validationErrors={{\n                            isNumeric: 'Must be a number',\n                            isDefaultRequiredValue: 'Age Minimum is Required',\n                        }}\n                    />\n                    </Form.Group>\n\n\n                    <Form.Input\n                        onChange={h}\n                        name=\"oldest_enrolled\"\n                        value={this.state.oldest_enrolled}\n                        placeholder=\"15\"\n                        // icon=\"mail\"\n                        label=\"Oldest Allowed Age\"\n                        // required\n                        validations=\"isNumeric\"\n                        validationErrors={{\n                            isNumeric: 'Must be a number',\n                            // isDefaultRequiredValue: 'Email is Required',\n                        }}\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                    />\n                    <Form.Group widths='equal' >\n                    <Form.Field \n                        label=\"Date Range\"\n                        control={DatesRangeInput}\n                        closable\n                        name=\"datesRange\"\n                        dateFormat=\"MM/DD/YYYY\"\n                        placeholder=\"Start Date - End Date\"\n                        value={this.state.datesRange}\n                        required\n                        validationErrors={{\n                            isDefaultRequiredValue: 'Date Range is Required',\n                        }}\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        iconPosition=\"left\"\n                        onChange={h}\n                    />\n                      <Form.Dropdown\n                            label=\"Days of Week\"\n                            name=\"days_of_occurrence\"\n                            placeholder='Days Activity Occurs'\n                            fluid\n                            multiple\n                            search\n                            selection\n                            options={dayOptions}\n                            onChange={h}\n                            value={this.state.days_of_occurrence}\n                    />\n                    </Form.Group>\n                    <Form.Group widths='equal' >\n\n                    <TimeInput\n                        label=\"Start Time\"\n                        // control={TimeInput}\n                        name=\"start_time\"\n                        timeFormat=\"AMPM\"\n                        // disableMinute={true}\n                        closable\n                        placeholder=\"Start Time\"\n                        value={this.state.start_time}\n                        iconPosition=\"left\"\n                        onChange={h}\n                        required\n                        // validations=\"isWords\"\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        validationErrors={{\n                            isDefaultRequiredValue: 'Start Time is Required',\n                        }}\n                    />\n                    <Form.Field \n                        label=\"End Time\"\n                        required\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        control={TimeInput}\n                        name=\"end_time\"\n                        timeFormat=\"AMPM\"\n                        // disableMinute={true}\n                        validationErrors={{\n                            isDefaultRequiredValue: 'End Time is Required',\n                        }}\n                        // closable=\"true\"\n                        closable\n                        placeholder=\"End Time\"\n                        value={this.state.end_time}\n                        iconPosition=\"left\"\n                        onChange={h}\n                    />\n                    </Form.Group>\n                    <Form.Input\n                        onChange={h}\n                        name=\"max_enrollment\"\n                        value={this.state.max_enrollment}\n                        placeholder=\"25\"\n                        // icon=\"mail\"\n                        label=\"Maximum Enrollment\"\n                        // required\n                        validations=\"isNumeric\"\n                        validationErrors={{\n                            isNumeric: 'Must be a number',\n                            // isDefaultRequiredValue: 'Email is Required',\n                        }}\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                    />\n                    <Form.Group>\n                        <Form.Button content=\"Submit\" color=\"green\"/>\n                        <Form.Button type=\"button\" content=\"Reset\" onClick={ () => this.form.reset() }/>\n                    </Form.Group>\n                </Form>\n\n            </Container>\n        );\n    }\n\n}\n\n","import React, { Component } from 'react';\nimport SignupForm from './frontend/Form.js';\nimport Dashboard from './frontend/Dashboard.js';\nimport ActivitiesPage from './frontend/ActivitiesPage';\nimport ActivityForm from './frontend/ActivityForm';\nimport Homepage from './frontend/Homepage.js';\nimport Sessionpage from './frontend/Sessionpage.js';\nimport Topbar from './frontend/Topbar.js';\nimport {Container, Header, Segment} from 'semantic-ui-react';\nimport './App.css';\nimport { Form, Field } from 'react-final-form';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\n\nclass App extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n  render() {\n    return (\n      <div>\n      {/* <Segment inverted> */}\n        {/* <Container text>\n          <Header\n            as='h1'\n            textAlign='center'\n            inverted\n            content='KIBSD After School Activity Sign-up'\n            style={{\n              fontSize: '4em',\n              fontWeight: 'normal',\n              marginBottom: '3em',\n              marginTop: '2em',\n            }}\n          />\n        </Container> */}\n      {/* </Segment> */}\n      {/* <center><Homepage /></center> */}\n\n      <Router>\n        <Topbar/>\n      {/* </Router> */}\n      {/* <Router> */}\n          <Route path=\"/home\" component={Homepage} />\n          <Route path=\"/sessions\" component={Sessionpage} />\n          <Route path=\"/activity\" component={ActivityForm} />\n          <Route path=\"/activities\" component={ActivitiesPage} />\n      </Router>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\n// import ConfirmedTable from './ConfirmedTable.js';\nimport Homepage from './Homepage.js';\nimport Sessionpage from './Sessionpage.js';\nimport Topbar from './Topbar.js';\nimport ActivitiesPage from './ActivitiesPage.js';\nimport ActivityForm from './ActivityForm.js';\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\n\nexport default class Dashboard extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n  render() {\n    return (\n        <Router>\n          <Topbar />\n        hi\n        {/* <div>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/sessions\">Sessions</Link>\n            </li>\n            <li>\n              <Link to=\"/topics\">Topics</Link>\n            </li>\n          </ul>\n  \n          <hr /> */}\n        <div>\n          <Route path=\"/\" component={Homepage} />\n        </div>\n      </Router>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}