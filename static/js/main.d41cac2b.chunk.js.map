{"version":3,"sources":["serviceWorker.js","middleend/fetchers.js","components/Admin/UserProfile.js","components/Admin/Login.js","components/Admin/Topbar.js","components/Admin/AuthorizedWrapper.js","components/Admin/ActivitiesPage.js","components/Admin/ActivityForm.js","components/Admin/EnrollmentsPage.js","components/Admin/Homepage.js","components/Parent/EnrollmentUpdate.js","routes.js","components/Admin/Dashboard.js","components/Parent/Signup.js","index.js"],"names":["Boolean","window","location","hostname","match","root","enrollment_list_endpoint","activity_list_endpoint","activity_create_endpoint","enrollment_rud_endpoint","enrollment_create_endpoint","enrollment_retrieve_by_token_endpoint","login_endpoint","error_handler","err","console","log","fetch_all_enrollments","on_success","on_error","arguments","length","undefined","fetch","then","response","status","json","data","fetch_all_activities","create_activity","activity_information","real_endpoint","conf","method","body","JSON","stringify","headers","Headers","Content-Type","UserProfile","user_information","i","field","this","state","fields","sessionStorage","setItem","userInformation","userInfo","getItem","React","Component","username","Login","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","user_info","password","redirect","onClick","bind","assertThisInitialized","getResponse","handleChange","_this$state","storeUserInformation","form_info","self","catch","login","val","setState","storeInfo","event","_this2","_event$target","target","value","name","defineProperty","react_default","a","createElement","react","react_router","to","Grid_default","justify","container","spacing","direction","alignItems","style","minHeight","item","FormControl_default","TextField_default","label","type","variant","onChange","required","autoComplete","margin","Button_default","component","coltar","theme","createMuiTheme","palette","primary","deepPurple","secondary","amber","withRouter","withStyles","flexGrow","backgroundColor","background","paper","tabsRoot","borderBottom","tabsIndicator","tabRoot","&:hover","color","opacity","tabSelected","typography","padding","unit","nav_links","List_default","routes","map","route","react_router_dom","base","path","key","ListItem_default","button","ListItemText_default","_useState","useState","slicedToArray","dark","AuthorizedWrapper","xs","Card_default","CardContent_default","CardActions_default","Fab_default","Link_default","RouterLink","render_val","getNoAccessPage","children","ActivitiesPage","activities","loaded","placeholder","createNew","enrollments","error","history","push","Segment","Header","as","Content","Subheader","es","defaultPageSize","columns","accessor","Button_Button","content","ActivityForm","title","youngest_enrolled","oldest_enrolled","start_date","end_date","days_of_occurrence","start_time","end_time","max_enrollment","datesRange","handleSubmit","t","result","time","substr","indexOf","suffix","hour","minute","parseInt","toString","trim","parse_time","clearForm","form","reset","e","_ref","hasOwnProperty","h","Container","lib","ref","onSubmit","Group","widths","Input","validations","errorLabel","Label","pointing","validationErrors","isWords","isDefaultRequiredValue","isNumeric","Field","control","DatesRangeInput","closable","dateFormat","iconPosition","Dropdown","fluid","multiple","search","selection","options","text","commonjs","timeFormat","TimeInput","Button","EnrollmentsPage","enrollment_type","filterByStatus","L","enrollment_status","filter","enrollment","confirmed","activity_title","activity","child_last_name","child","last_name","child_name","first_name","confirmed_enrollments","pending_enrollments","react_loading_default","Tabs_default","textColor","Tab_default","text-decoration","material_table_default","isLoading","Homepage","class","es_Card","bg","width","Body","Title","Text","EnrollmentUpdate","successful","inlineStyle","modal","handleAction","token","retrieve_enrollments_by_token","params","action","enrollment_info","confirm","cancel","_this3","e_id","new_confirmation_status","confirm_endpoint","confirmation_update","update_enrollment","enqueueSnackbar","id","_this4","destroy_enrollment","enrollment_data","_this5","alignContent","Done_default","fontSize","Typography_default","Link","actionsColumnIndex","toolbar","actions","rowData","icon","tooltip","iconProps","SnackEnrollmentUpdate","withSnackbar","admin_routes","render","AuthorizedWrapper_AuthorizedWrapper","Dashboard","Admin_Topbar","Signup","child_first_name","parent_email","possible_activities","different","e_data","create_endpoint","create_enrollment","index","organize_options","_e$target","print_state","templateParams","firstName","lastName","email","parentEmail","emailjs","Divider","isEmail","marginTop","customErrorLabel","textAlign","formElement","customValidation","values","light","main","contrastText","ReactDOM","core_styles","build","maxSnack","Parent_EnrollmentUpdate","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d41cac2b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// CONSTANTS\n// const enrollment_list_endpoint = \"http://127.0.0.1:8000/api/enrollments\";\n// const endpoint = \"http://127.0.0.1:8000/api/enrollments/\";\nconst root = \"https://banana-tart-91724.herokuapp.com\";\nconst enrollment_list_endpoint = \"/api/enrollments/\";\nconst parent_list_endpoint = \"/api/parents/\";\nconst child_list_endpoint = \"/api/children/\";\nconst activity_list_endpoint = \"/api/activities/\";\nconst activity_create_endpoint = \"/api/make_activity/\";\nconst enrollment_rud_endpoint = \"/api/rud_enrollment/\"; //retrieve, update, destroy endpoint\nconst enrollment_create_endpoint = '/api/create_enrollment/';\nconst enrollment_batch_update_endpoint = '/api/batch_update_enrollments/';\nconst enrollment_retrieve_by_token_endpoint = '/api/enrollments_by_token/';\nconst login_endpoint = \"/api/login/\";\n\nfunction error_handler(err) {\n    console.log(err);\n}\n\nexport function login(user_information) {\n    const real_endpoint = root + login_endpoint;\n    const conf = {\n        method: \"post\",\n        body: JSON.stringify(user_information),\n        headers: new Headers({ \"Content-Type\": \"application/json\" })\n    };\n    var result = fetch(real_endpoint, conf)\n        .then(response => response.json())\n        .then(data => data)\n        .catch(function(err) {\n            console.log(err);\n        });\n    return result;\n}\n\nexport function retrieve_enrollments_by_token(token, on_success, on_error=(error_handler)) {\n    const retrieve_enrollments_by_token_endpoint = root + enrollment_retrieve_by_token_endpoint + token + \"/\";\n    const content = {\n        method: \"GET\",\n    };\n\n    fetch(retrieve_enrollments_by_token_endpoint, content)\n        .then(response => {\n            if(response.status !== 200) {\n                on_error(response);\n            } else {\n                return response.json();\n            }\n        })\n        .then(data => on_success(data));\n}\nexport function batch_update_enrollments(enrollments, on_success, on_error=(error_handler)) {\n    const batch_update_endpoint = root + enrollment_batch_update_endpoint;\n    const content = {\n        method: \"PUT\",\n        body: JSON.stringify(enrollments),\n        headers: new Headers({ \"Content-Type\": \"application/json\" })\n    };\n\n    fetch(batch_update_endpoint, content)\n        .then(response => {\n            if(response.status !== 200) {\n                on_error(response);\n            } else {\n                return response.json();\n            }\n        })\n        .then(data => on_success(data));\n}\n\nexport function update_enrollment(e_id, on_success, on_error=(error_handler), new_confirmation_status=true) {\n    const confirm_endpoint = root + enrollment_rud_endpoint + e_id + \"/\";\n    const confirmation_update = {\n        confirmed: new_confirmation_status // defaults to true for EnrollmentUpdate use case, can make it false for admin portal\n    }\n    const content = {\n        method: \"PATCH\", // patch for partial update would work for updating ()\n        body: JSON.stringify(confirmation_update),\n        headers: new Headers({ \"Content-Type\": \"application/json\" })\n    };\n    fetch(confirm_endpoint, content)\n    .then(response => {\n        if (response.status !== 200) {\n            on_error(response);\n        } else {\n            return response.json();\n        }\n    })\n    .then(data => on_success(data));\n}\n\nexport function create_enrollment(e_data, on_success, on_error=(error_handler)) {\n    const create_endpoint = root + enrollment_create_endpoint;\n    const content = {\n        method: \"POST\", // patch for partial update would work for updating ()\n        body: JSON.stringify(e_data),\n        headers: new Headers({ \"Content-Type\": \"application/json\" })\n    };\n    fetch(create_endpoint, content)\n    .then(response => {\n        if (response.status !== 200) {\n            on_error(response);\n        } else {\n            return response.json();\n        }\n    })\n    .then(data => on_success(data));\n}\n\nexport function get_enrollment(e_id, on_success, on_error=(error_handler)) {\n    const get_endpoint = root + enrollment_rud_endpoint + e_id + \"/\";\n    const content = {\n        method: \"GET\", // delete would work for, well, deleting\n    };\n\n    fetch(get_endpoint, content)\n    .then(response => {\n        if (response.status !== 200) {\n            on_error(response);\n        } else {\n            return response.json();\n        }\n    })\n    .then(data => on_success(data));\n\n}\n\nexport function destroy_enrollment(e_id, on_success, on_error=(error_handler)) {\n    const destroy_endpoint = root + enrollment_rud_endpoint + e_id + \"/\";\n    const content = {\n        method: \"DELETE\", // delete would work for, well, deleting\n    };\n\n    fetch(destroy_endpoint, content)\n    .then(response => {\n        if (response.status !== 200) {\n            on_error(response);\n        } else {\n            return response.json();\n        }\n    })\n    .then(data => on_success(data));\n\n}\n// Enrollment\nexport function fetch_all_enrollments(on_success, on_error=(error_handler)) {\n    const stuff = {\n        // headers: new Headers({'Access-Control-Allow-Origin': '*'})\n        method: \"GET\",\n        // body: JSON.stringify(user),\n        // headers: new Headers({ \"Content-Type\": \"application/json\" })\n    };\n    const real_endpoint = root + enrollment_list_endpoint;\n    fetch(real_endpoint)\n    .then(response => {\n        if (response.status !== 200) {\n            on_error(response);\n        } else {\n            return response.json();\n        }\n    })\n    .then(data => on_success(data));\n}\n\nexport function fetch_all_activities(on_success, on_error=(error_handler)) {\n    const real_endpoint = root + activity_list_endpoint;\n    fetch(real_endpoint)\n    .then(response => {\n        if (response.status !== 200) {\n            on_error(response);\n        } else {\n            return response.json();\n        }\n    })\n    .then(data => on_success(data));\n}\n\nexport function create_activity(activity_information) {\n    const real_endpoint = root + activity_create_endpoint;\n    const conf = {\n        method: \"POST\",\n        body: JSON.stringify(activity_information),\n        headers: new Headers({ \"Content-Type\": \"application/json\" })\n    };\n    fetch(real_endpoint, conf).then(response => console.log(response));\n}","import React from 'react';\n\nexport default class UserProfile extends React.Component {\n    static state = {\n        fields: [\"status\", \"username\"],\n        userInfo: {\n            status: \"\",\n            username: \"\",\n            // first_name: \"\",\n            // last_name: \"\",\n        }\n    };\n\n    static storeUserInformation(user_information) {\n        var i;\n        var field;\n        console.log(user_information);\n        for (i = 0; i < this.state.fields.length; i++) {\n            field = this.state.fields[i];\n            sessionStorage.setItem(field, user_information[field]); \n        }\n        console.log(\"Session Storage:\\n\");\n        console.log(sessionStorage.status);\n    };\n\n    static getUserInformation() {\n        var userInformation = this.state.userInfo;\n        var i;\n        var field;\n        for (i = 0; i < this.state.fields.length; i++) {\n            field = this.state.fields[i];\n            userInformation[field] = sessionStorage.getItem(field); \n        } \n        return userInformation;\n    };\n};","import React, {Fragment} from 'react';\nimport {login} from '../../middleend/fetchers';\nimport UserProfile from './UserProfile';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport {Redirect} from 'react-router-dom';\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user_info : [],\n            username: '',\n            password: '',\n            redirect:false\n        };\n        this.onClick=this.onClick.bind(this);\n        this.getResponse = this.getResponse.bind(this);\n        this.handleChange=this.handleChange.bind(this);\n    };\n\n    onClick() {\n        const{username, password} = this.state;\n        this.getResponse({username:username, password:password});\n    }\n\n    storeInfo() {\n        var user_info = this.state.user_info;\n        UserProfile.storeUserInformation(user_info);\n    }\n\n    getResponse(form_info) {\n        var self=this;\n        login(form_info).then(val => {\n            self.setState({user_info : val}, self.storeInfo);\n        });\n        // var res = login(form_info);\n        // self.setState({user_info: res})\n    };\n    handleChange(event) {\n        const {value, name} = event.target;\n        this.setState({[name]:value}, ()=>{console.log(this.state)});\n\n    }\n\n    render() {\n        return (\n            <Fragment>\n\n            { sessionStorage.getItem(\"status\")===\"authorized\" ?\n            <Redirect to=\"/admin\" /> :\n            <Grid justify=\"center\" \n                    container\n                    spacing={24}\n                    direction=\"column\"\n                    alignItems=\"center\" \n                    style={{ minHeight: '100vh' }}\n            >\n            <Grid item >\n                <FormControl>\n                {/* <form onSubmit={this.getResponse}> */}\n                    <TextField\n                        name=\"username\"\n                        label=\"Email\"\n                        type=\"email\"\n                        variant=\"outlined\"\n                        value={this.state.name}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    <TextField\n                        required\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                        autoComplete=\"current-password\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    />\n                    <Button onClick={this.onClick} component=\"button\" variant=\"contained\" type=\"submit\" coltar=\"primary\">\n                        Login\n                    </Button>\n\n                {/* </form> */}\n\n                </FormControl>\n\n            </Grid>\n            </Grid>}\n            </Fragment>\n        )\n    };\n};","import React, { useState, useEffect } from 'react';\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport { BrowserRouter as Router, Route, Link, NavLink, withRouter} from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/styles'; \nimport deepPurple from '@material-ui/core/colors/purple';\nimport amber from '@material-ui/core/colors/amber';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nfunction m() {\n  var res = {};\n  for (var i = 0; i < arguments.length; ++i) {\n    if (arguments[i]) {\n      Object.assign(res, arguments[i]);\n    };\n  }; \n  return res;\n}\nconst theme = createMuiTheme( // same theme, just dark\n  // palette: {\n  //   type: 'dark', // Switching the dark mode on is a single property value change.\n  // },\n  {\n    palette: {\n      primary: deepPurple,\n      secondary: amber,\n    },\n  }\n  // typography: { useNextVariants: true },\n);\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     flexGrow: 1,\n//     backgroundColor: theme.palette.background.paper,\n//   },\n// }));\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  tabsRoot: {\n    borderBottom: '1px solid #e8e8e8',\n  },\n  tabsIndicator: {\n    backgroundColor: '#1890ff',\n  },\n  tabRoot: {\n    '&:hover': {\n      color: '#1890ff',//theme.palette.secondary,\n      opacity: 1,\n    },\n    // '&$tabSelected': {\n    //   color: '#1890ff',\n    //   fontWeight: theme.typography.fontWeightMedium,\n    // },\n    // '&:focus': {\n    //   color: '#40a9ff',\n    // },\n  },\n  tabSelected: {},\n  typography: {\n    padding: theme.spacing.unit * 3,\n  },\n});\n\nfunction Topbar(props) {\n  // const classes = useStyles();\n  var state = {\n    0: false,\n    1: false,\n    2: false,\n  };\n\n  const nav_links = (\n    <List>\n    {props.routes.map((route, i) => {\n      return (\n        <NavLink\n          to={route.base + route.path}\n          key={i}\n        >\n          <ListItem button>\n            <ListItemText primary={route.name}/>\n          </ListItem>\n        </NavLink>\n      );\n    })}\n    </List>\n  );\n\n  const [hovering] = useState(false);\n  const styles = {\n    hover: {\n      backgroundColor: theme.palette.secondary.dark,\n    }\n  }\n  function getValue() {\n    var val_key = props.history.location.pathname.substr(1);\n    const valDict = {\n      'home':0,\n      'enrollments':1,\n      'sessions':2,\n    };\n    return valDict[val_key];\n  }\n  function handleChange(event, value) {\n    const routeDict = {\n      0: 'home',\n      1: 'enrollments',\n      2: 'sessions'\n    };\n    props.history.push(\"/\" + routeDict[value]);\n  };\n  function onMouseEnter(event, value) {\n    state[value] = true;\n  }\n  function onMouseLeave(event, value) {\n    state[value] = true;\n  }\n  const classes = props;\n  return (\n    <div>\n\n    {nav_links}\n    </div>\n    // <NoSsr>\n    //   {/* <div className={{flexGrow:1, backgroundColor: theme.palette.secondary.dark}}> */}\n    //    <div >\n    //   <AppBar >\n    //   <Tabs onChange={handleChange} variant=\"fullWidth\" value={getValue()}>\n    //     <Tab onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave} component=\"div\"label=\"Overview\"\n    //     classes={{root: classes.tabRoot, indicator: classes.tabIndicator}} textColor=\"primary\"\n    //     />\n    //     <Tab style={{ textDecoration: 'none',color:'none' }}component=\"div\" label=\"Enrollments\"/>\n    //     <Tab style={{ textDecoration: 'none', hover: theme.palette.secondary.light}}component=\"a\" label=\"Sessions\" />\n\n    //   </Tabs>\n\n    //   </AppBar> \n    //   </div>\n    // </NoSsr>\n  );\n}\n// class Topbar extends Component {\n  // state = { activeItem: 'home' }\n  // constructor(props) {\n  //   super(props);\n  //   this.handleItemClick = this.handleItemClick.bind(this);\n  // }\n  // handleItemClick = (e, { name }) => {\n  //   this.setState({ activeItem: name })\n  // }\n//   handleChange = (event, value) => {\n//     const routeDict = {\n//       0: 'home',\n//       1: 'enrollments',\n//       2: 'sessions'\n//     }\n//     this.setState({ value });\n//     this.props.history.push(\"/\" + routeDict[value]);\n//   };\n//   render() {\n//     return (\n//       <div className={classes.root}>\n//       <AppBar >\n//       <Tabs onChange={this.handleChange} variant=\"fullWidth\" textColor=\"secondary\" indicatorColor=\"secondary\">\n//         <Tab component=\"a\" onClick={event => event.preventDefault()}label=\"Overview\"/>\n//         <Tab component=\"a\" label=\"Enrollments\"/>\n//         <Tab component=\"a\" label=\"Sessions\" />\n\n//       </Tabs>\n\n//       </AppBar> \n//       </div>\n\n//     );\n//   }\n// }\nexport default withRouter(withStyles(styles)(Topbar));","import React from 'react';\n\nimport Login from 'components/Admin/Login';\nimport {Link as RouterLink} from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\n\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nexport default class AuthorizedWrapper extends React.Component {\n    getNoAccessPage() {\n        return (\n            <Grid justify=\"center\" xs={4} >\n\n            <Card>\n                <CardContent>\n                    Unfortunately you don't have access to this. Try logging in below!\n                </CardContent>\n                <CardActions>\n                    <Fab>\n                        <Link color=\"#33eb91\" component={RouterLink} to=\"/login\" >\n                        Login!\n                        </Link>\n                    </Fab>\n                </CardActions>\n\n            </Card>\n            </Grid>\n        );\n    }\n    render() {\n        var render_val = this.getNoAccessPage(); \n        return (\n            <div>\n            {(sessionStorage.getItem(\"status\")===\"authorized\" ? this.props.children : render_val)}\n\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport {Table, Header, Segment, Button} from 'semantic-ui-react';\nimport ReactTable from 'react-table';\nimport {Link, withRouter} from 'react-router-dom';\n\nimport {\n  fetch_all_activities\n} from '../../middleend/fetchers';\n\nclass ActivitiesPage extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"here!\");\n    this.state = {\n      activities: [],\n      loaded: false,\n      placeholder: \"Loading...\",\n    };\n    this.createNew = this.createNew.bind(this);\n  \n  }\n\n  async componentDidMount() {\n    // const res = await fetch('http://127.0.0.1:8000/api/enrollments/');\n    // const todos = await res.json();\n    // console.log(todos);\n    // this.setState({ enrollments: todos, loaded: true });\n    fetch_all_activities(\n      response => { this.setState({ activities: response, loaded: true }, () => console.log(this.state.enrollments)); },\n      error    => { this.setState({ placeholder: \"Something went wrong.\" }); },\n    );\n    // this.createTable();\n  }\n  createNew() {\n    this.props.history.push(\"/activity\");\n  }\n\n  render() {\n    // const confirmed_enrollments = this.filterByStatus(this.state.enrollments, true);\n    const activities = this.state.activities;\n    const columns = [\n      {\n        Header: 'Activity',\n        accessor: 'title' // String-based value accessors!\n      },\n      {\n        Header: 'Start Date',\n        accessor: 'start_date' // String-based value accessors!\n      },\n      {\n        Header: 'End Date',\n        accessor: 'end_date' // String-based value accessors!\n      },\n      // {\n      //   Header: 'Status',\n      //   accessor: 'confirmed', // String-based value accessors!\n      //   Cell: props =>\n      // },\n    ];\n\n    return (\n      <Segment>\n          <Header as='h2'color='olive'>\n            <Header.Content>\n              Activities \n              <Header.Subheader>Manage Activities</Header.Subheader>\n            </Header.Content>\n          </Header>\n          <ReactTable defaultPageSize={5}data={activities} columns={columns} />\n            {/* <Form.Button content=\"Submit\" color=\"green\"/> */}\n           <Button content=\"Create New\" color='green' onClick={this.createNew}/>\n      </Segment>\n    );\n  };\n\n  // createTable() {\n  //   let table = []\n\n  //   // Outer loop to create parent\n  //   // console.log(this.state);\n  //   for (let i = 0; i < this.state['activities'].length; i++) {\n  //     let a = this.state['activities'][i];\n  //     console.log(a);\n  //     let row = [];\n  //     row.push(\n  //       <Table.Cell>\n  //         {a.title}\n  //       </Table.Cell>\n  //     );\n  //     row.push(\n  //       <Table.Cell>\n  //         {a.start_date}\n  //       </Table.Cell>\n  //     );\n  //     row.push(\n  //       <Table.Cell>\n  //         {a.end_date}\n  //       </Table.Cell>\n  //     );\n  //     //Create the parent and add the children\n  //     // table.push(<tr>{children}</tr>)\n  //     table.push(<Table.Row key={i} children={row} />)\n  //   }\n  //   return table\n  // }\n\n  // render() {\n\n  //     return ( \n  //       <div>\n  //           <Button inverted color='green'>\n  //             <Link to=\"/activity\">Create New</Link>\n  //           </Button>\n  //         <Table celled selectable>\n  //           <Table.Header>\n  //             <Table.Row>\n  //               <Table.HeaderCell>Activity</Table.HeaderCell>\n  //               <Table.HeaderCell>Start Date</Table.HeaderCell>\n  //               <Table.HeaderCell>End Date</Table.HeaderCell>\n  //             </Table.Row>\n  //           </Table.Header>\n\n  //           <Table.Body>\n  //             {this.createTable()}\n  //           </Table.Body>\n  //         </Table> \n\n\n  //       </div>\n  //   );\n  // }\n}\nexport default withRouter(ActivitiesPage);","import React, {Component} from 'react';\nimport { Label, Container, Divider} from 'semantic-ui-react';\nimport {\n    Form, Dropdown, \n  } from 'formsy-semantic-ui-react';\n\nimport {create_activity} from '../../middleend/fetchers';\nimport {\n    // DateInput,\n    TimeInput,\n    // DateTimeInput,\n    DatesRangeInput\n  } from 'semantic-ui-calendar-react';\n\nexport default class ActivityForm extends Component {\n    validate() {\n        return true;\n    };\n\n    onSubmit(event) {\n        console.log(event);\n        create_activity(event);\n    };\n\n    print_state() {\n        console.log(this.state);\n    }\n    parse_time(t) {\n        var time = t.substr(0, t.indexOf(\" \"));\n        var suffix = t.substr(t.indexOf(\" \")+1);\n        var result;\n        if (suffix === \"AM\") {\n            result = time;\n        } else if (suffix === \"PM\") {\n            var hour = time.substr(0, time.indexOf(\":\"));\n            var minute = time.substr(time.indexOf(\":\") + 1);\n            hour = (parseInt(hour, 10) + 12).toString();\n            result = hour + \":\" + minute;\n        }\n        return result;\n    }\n    handleSubmit(event) {\n        // console.log(event);\n        var datesRange = this.state.datesRange;\n        this.state.start_date = datesRange.substr(0, datesRange.indexOf(\"-\")).trim() //.replace(/\\//g, \"-\")\n        this.state.end_date = datesRange.substr(datesRange.indexOf(\"-\")+1).trim() //.replace(/\\//g, \"-\")\n        this.state.start_time = this.parse_time(this.state.start_time);\n        this.state.end_time = this.parse_time(this.state.end_time);\n        delete this.state.datesRange;\n        create_activity(this.state);\n        this.clearForm();\n    };\n    clearForm() {\n        this.form.reset();\n        this.setState({\n            'title' : '',\n            'youngest_enrolled' : '',\n            'oldest_enrolled' : '',\n            'start_date' : '',\n            'end_date' : '',\n            'days_of_occurrence' : '',\n            'start_time' : '',\n            'end_time' : '',\n            'max_enrollment' : '',\n            datesRange:''\n\n        })\n    }\n\n    constructor(props) {\n        super(props);\n            // \"title\": \"Activity 4\",\n            // \"youngest_enrolled\": 2\n            // \"oldest_enrolled\": 2,\n            // \"start_date\": \"2019-04-04\",\n            // \"end_date\": \"2019-04-04\",\n            // \"days_of_occurrence\": [],\n            // \"start_time\": \"18:38:04.950703\",\n            // \"end_time\": \"18:38:04.950727\",\n            // \"max_enrollment\": 2,\n            // \"enrolled_students\": [\n            //     5,\n            //     5,\n            //     10,\n            //     10\n            // ],\n        this.state = {\n            'title' : '',\n            'youngest_enrolled' : '',\n            'oldest_enrolled' : '',\n            'start_date' : '',\n            'end_date' : '',\n            'days_of_occurrence' : '',\n            'start_time' : '',\n            'end_time' : '',\n            'max_enrollment' : '',\n            datesRange:''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    };\n    handleChange(e, {name, value}) {\n        if (this.state.hasOwnProperty(name)) {\n          this.setState({ [name]: value });\n        }\n            console.log(name, value);\n        // this.setState({[name]:value}, this.print_state)\n\n    }\n    // handleChange = (event, {name, value}) => {\n    //     if (this.state.hasOwnProperty(name)) {\n    //         this.setState({ [name]: value });\n    //         console.log(name, value);\n    //     }\n    // }\n\n    render() {\n        const dayOptions = [\n            {\n              key: 0,\n              text: 'Monday',\n              value: 'MON',\n            },\n            {\n              key: 1,\n              text: 'Tuesday',\n              value: 'TUE',\n            },\n            {\n              key: 2,\n              text: 'Wednesday',\n              value: 'WED',\n            },\n            {\n              key: 3,\n              text: 'Thursday',\n              value: 'THU',\n            },\n            {\n              key: 4,\n              text: 'Friday',\n              value: 'FRI',\n            },\n            {\n              key: 5,\n              text: 'Saturday',\n              value: 'SAT',\n            },\n            {\n              key: 6,\n              text: 'Sunday',\n              value: 'SUN',\n            }\n          ]\n        var layoutChoice = 'vertical';\n        // var s = this.onSubmit;\n        var h = this.handleChange;\n        var styles = {\n            root: {\n              marginTop: 18,\n              // padding: '0 24px 24px 24px',\n            },\n          \n            customErrorLabel: {\n              color: '#f00',\n              textAlign: 'center',\n            },\n          };\n        return (\n            <Container>\n                <Form\n                    ref={ ref => this.form = ref }\n                    onSubmit={this.handleSubmit}\n                >\n                    <Form.Group widths=\"equal\">\n                    <Form.Input\n                        onChange={h}\n                        required\n                        name=\"title\"\n                        label=\"Activity Title\"\n                        placeholder=\"Bowstaffing 101\"\n                        value={this.state.title}\n                        validations=\"isWords\"\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        validationErrors={{\n                            isWords: 'No numbers or special characters allowed',\n                            isDefaultRequiredValue: 'Title is Required',\n                        }}\n                    />\n                    {/* Last name */}\n                    <Form.Input\n                        onChange={h}\n                        name=\"youngest_enrolled\"\n                        value={this.state.youngest_enrolled}\n                        placeholder=\"10\"\n                        label=\"Youngest Allowed Age\"\n                        required\n                        validations=\"isNumeric\"\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        validationErrors={{\n                            isNumeric: 'Must be a number',\n                            isDefaultRequiredValue: 'Age Minimum is Required',\n                        }}\n                    />\n                    </Form.Group>\n\n\n                    <Form.Input\n                        onChange={h}\n                        name=\"oldest_enrolled\"\n                        value={this.state.oldest_enrolled}\n                        placeholder=\"15\"\n                        // icon=\"mail\"\n                        label=\"Oldest Allowed Age\"\n                        // required\n                        validations=\"isNumeric\"\n                        validationErrors={{\n                            isNumeric: 'Must be a number',\n                            // isDefaultRequiredValue: 'Email is Required',\n                        }}\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                    />\n                    <Form.Group widths='equal' >\n                    <Form.Field \n                        label=\"Date Range\"\n                        control={DatesRangeInput}\n                        closable\n                        name=\"datesRange\"\n                        dateFormat=\"MM/DD/YYYY\"\n                        placeholder=\"Start Date - End Date\"\n                        value={this.state.datesRange}\n                        required\n                        validationErrors={{\n                            isDefaultRequiredValue: 'Date Range is Required',\n                        }}\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        iconPosition=\"left\"\n                        onChange={h}\n                    />\n                      <Form.Dropdown\n                            label=\"Days of Week\"\n                            name=\"days_of_occurrence\"\n                            placeholder='Days Activity Occurs'\n                            fluid\n                            multiple\n                            search\n                            selection\n                            options={dayOptions}\n                            onChange={h}\n                            value={this.state.days_of_occurrence}\n                    />\n                    </Form.Group>\n                    <Form.Group widths='equal' >\n\n                    <TimeInput\n                        label=\"Start Time\"\n                        // control={TimeInput}\n                        name=\"start_time\"\n                        timeFormat=\"AMPM\"\n                        // disableMinute={true}\n                        closable\n                        placeholder=\"Start Time\"\n                        value={this.state.start_time}\n                        iconPosition=\"left\"\n                        onChange={h}\n                        required\n                        // validations=\"isWords\"\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        validationErrors={{\n                            isDefaultRequiredValue: 'Start Time is Required',\n                        }}\n                    />\n                    <Form.Field \n                        label=\"End Time\"\n                        required\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        control={TimeInput}\n                        name=\"end_time\"\n                        timeFormat=\"AMPM\"\n                        // disableMinute={true}\n                        validationErrors={{\n                            isDefaultRequiredValue: 'End Time is Required',\n                        }}\n                        // closable=\"true\"\n                        closable\n                        placeholder=\"End Time\"\n                        value={this.state.end_time}\n                        iconPosition=\"left\"\n                        onChange={h}\n                    />\n                    </Form.Group>\n                    <Form.Input\n                        onChange={h}\n                        name=\"max_enrollment\"\n                        value={this.state.max_enrollment}\n                        placeholder=\"25\"\n                        // icon=\"mail\"\n                        label=\"Maximum Enrollment\"\n                        // required\n                        validations=\"isNumeric\"\n                        validationErrors={{\n                            isNumeric: 'Must be a number',\n                            // isDefaultRequiredValue: 'Email is Required',\n                        }}\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                    />\n                    <Form.Group>\n                        <Form.Button content=\"Submit\" color=\"green\"/>\n                        <Form.Button type=\"button\" content=\"Reset\" onClick={ () => this.form.reset() }/>\n                    </Form.Group>\n                </Form>\n\n            </Container>\n        );\n    }\n\n}\n\n","import React, { Component, Fragment } from \"react\";\nimport {Table, Header, Grid, Segment, Icon} from 'semantic-ui-react';\n// import ReactTable from 'react-table';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Paper from '@material-ui/core/Paper';\nimport MaterialTable from 'material-table';\nimport ReactLoading from 'react-loading';\n\nimport { unstable_Box as Box } from '@material-ui/core/Box';\nimport {\n  fetch_all_enrollments\n} from '../../middleend/fetchers';\n\nexport default class EnrollmentsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      enrollments: [],\n      loaded: false,\n      placeholder: \"Loading...\",\n      enrollment_type: \"pending\"\n    };\n\n    this.filterByStatus = this.filterByStatus.bind(this);\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  async componentDidMount() {\n    fetch_all_enrollments(\n      response => { this.setState({ enrollments: response, loaded: true }, () => console.log(this.state.enrollments)); },\n      error    => { this.setState({ loaded: false, placeholder: \"Something went wrong.\" }); },\n    )\n  }\n\n\n  filterByStatus(L, enrollment_status) {\n    if (L == null) {\n      return [];\n    }\n    var result = L.filter(enrollment => enrollment.confirmed === enrollment_status);\n    result = result.map((e, i) => {\n      return { activity_title: e.activity.title,\n        child_last_name: e.child.last_name,\n        child_name: e.child.first_name + \" \" + e.child.last_name\n      };\n    });\n    return result;\n  }\n\n  render() {\n    const confirmed_enrollments = this.state.loaded ? this.filterByStatus(this.state.enrollments, true) : [];\n    const pending_enrollments = this.state.loaded ? this.filterByStatus(this.state.enrollments, false) : [];\n    var loading = <ReactLoading type=\"spinningBubbles\" />\n    const columns = [\n      {\n        title: 'Activity',\n        field: 'activity_title'\n      },\n      {\n        title: 'Child',\n        field: 'child_name' \n      },\n    ];\n\n    return (\n      <Fragment>\n\n      <Tabs value={this.state.value} onChange={this.handleChange} textColor=\"secondary\">\n        <Tab component='a' style={{'text-decoration':'none'}}label=\"Pending Enrollments\"></Tab>\n        <Tab component='a'style={{'text-decoration':'none'}}label=\"Confirmed Enrollments\"></Tab>\n      </Tabs>\n      {\n        this.state.value===0 &&\n          <Fragment>\n            {/* <Header as='h2'color='green'>\n              <Icon name='checkmark' />\n              <Header.Content>\n                Confirmed \n                <Header.Subheader>Manage Confirmed Enrollments</Header.Subheader>\n              </Header.Content>\n            </Header> */}\n            <MaterialTable title=\"Pending\" columns={columns} isLoading={!this.state.loaded} data={pending_enrollments}  />\n\n          </Fragment>\n      }\n      {this.state.value===1 &&\n          <Fragment>\n            {/* <Header as='h2'color='orange'>\n              <Icon name='exclamation' />\n              <Header.Content>\n                Pending \n                <Header.Subheader>Manage Pending Enrollments</Header.Subheader>\n              </Header.Content>\n            </Header> */}\n            <MaterialTable title=\"Confirmed\" isLoading={!this.state.loaded} data={confirmed_enrollments} columns={columns} />\n          </Fragment>\n      }\n      </Fragment>\n    );\n  }\n}","import React, {Component} from 'react';\nimport './Homepage.css';\n// import '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Card,\n  Button,\n  Table,\n} from 'react-bootstrap';\n\n\n\nexport default class Homepage extends Component {\n    render() {\n        return (\n        // <>\n        <div>\n        \n        <div class = 'infoCards'>\n          <div class = 'card1'>\n          <Card bg=\"primary\" text=\"white\" style={{ width: '18rem' }}>\n            <Card.Header>Header</Card.Header>\n            <Card.Body>\n              <Card.Title>Primary Card Title</Card.Title>\n              <Card.Text>\n                Some quick example text to build on the card title and make up the bulk\n                of the card's content.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          </div>\n\n          <div class = 'card2'>\n          <Card bg=\"secondary\" text=\"white\" style={{ width: '18rem' }}>\n            <Card.Header>Header</Card.Header>\n            <Card.Body>\n              <Card.Title>Secondary Card Title</Card.Title>\n              <Card.Text>\n                Some quick example text to build on the card title and make up the bulk\n                of the card's content.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          </div>\n\n          <div class = 'card3'>\n          <Card bg=\"success\" text=\"white\" style={{ width: '18rem' }}>\n            <Card.Header>Header</Card.Header>\n            <Card.Body>\n              <Card.Title>Success Card Title</Card.Title>\n              <Card.Text>\n                Some quick example text to build on the card title and make up the bulk\n                of the card's content.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          </div>\n\n          <div class = 'card4'>\n          <Card bg=\"danger\" text=\"white\" style={{ width: '18rem' }}>\n            <Card.Header>Header</Card.Header>\n            <Card.Body>\n              <Card.Title>Danger Card Title</Card.Title>\n              <Card.Text>\n                Some quick example text to build on the card title and make up the bulk\n                of the card's content.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          </div>\n\n          <div class = 'card5'>\n          <Card bg=\"warning\" text=\"white\" style={{ width: '18rem' }}>\n            <Card.Header>Header</Card.Header>\n            <Card.Body>\n              <Card.Title>Warning Card Title</Card.Title>\n              <Card.Text>\n                Some quick example text to build on the card title and make up the bulk\n                of the card's content.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          </div>\n          </div>\n{/*\n         <div class = 'table1'>\n        <Table responsive>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Table heading</th>\n              <th>Table heading</th>\n              <th>Table heading</th>\n              <th>Table heading</th>\n              <th>Table heading</th>\n              <th>Table heading</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>1</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n            </tr>\n            <tr>\n              <td>2</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n            </tr>\n            <tr>\n              <td>3</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n              <td>Table cell</td>\n            </tr>\n          </tbody>\n        </Table>;\n        </div> \n        */}\n        </div>\n        );\n    }\n\n}","import React, {Fragment} from 'react';\nimport {retrieve_enrollments_by_token, update_enrollment, destroy_enrollment} from '../../middleend/fetchers.js';\n\nimport { SnackbarProvider, withSnackbar } from 'notistack';\nimport MaterialTable from 'material-table';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Modal from '@material-ui/core/Modal';\nimport Icon from '@material-ui/core/Icon';\nimport Fab from '@material-ui/core/Fab';\nimport { Link } from 'react-router-dom'\nimport DoneOutlineIcon from '@material-ui/icons/Done';\n\nclass EnrollmentUpdate extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            successful: '',\n            response: '',\n            loaded: false,\n            enrollments: []\n        }\n        this.inlineStyle = {\n            modal : {\n            //   display: 'inline-block !important',\n            //   marginLeft: 'auto',\n            //   marginRight: 'auto'\n            }\n          };\n\n        this.handleAction = this.handleAction.bind(this);\n    }\n    componentDidMount() {\n        console.log(this.props);\n        const token = this.props.match.params.token; // match enrollment_id from \n        retrieve_enrollments_by_token(\n            token,\n            response => { this.setState({successful: true, enrollments: response[\"enrollments\"].filter((e) => {return e.confirmed === false}), loaded:true }, () => console.log(this.state)); },\n            error    => { this.setState({successful: false, response: error, loaded:true }); },\n        );\n\n    }\n\n    handleAction(action, enrollment_info) {\n        if (action === \"confirm\") {\n            this.confirm(enrollment_info);\n        } else if (action ===\"cancel\") {\n            this.cancel(enrollment_info);\n        }\n    }\n\n    confirm(enrollment_info) {\n        var e_id = enrollment_info.e_id;\n        var confirm_variant = 'success';\n        update_enrollment(\n            e_id,\n            response => { this.setState({successful: true, response: response, loaded:true }, () => {\n                this.props.enqueueSnackbar(enrollment_info.first_name + \" has been successfully enrolled into \" + enrollment_info.activity_title, {variant:confirm_variant});\n                this.setState({enrollments: this.state.enrollments.filter((e) => {return e.id !== e_id})});}\n            )},\n            error    => { this.setState({successful: false, response: error, loaded:true }); },\n        );\n    }\n\n    cancel(enrollment_info) {\n        var cancel_variant = 'warning';\n        var e_id = enrollment_info.e_id;\n        destroy_enrollment(\n            e_id,\n            response => { this.setState({successful: true, response: response, loaded:true }, () =>{\n                this.props.enqueueSnackbar(enrollment_info.first_name + \" no longer has a pending enrollment in \" + enrollment_info.activity_title, {variant: cancel_variant});\n                this.setState({enrollments: this.state.enrollments.filter((e) => {return e.id !== e_id})});\n\n            })},\n            error    => { this.setState({successful: false, response: error, loaded:true }); },\n        );\n    }\n    render() {\n        var enrollment_data;\n        if (this.state.loaded) {\n            enrollment_data = this.state.enrollments.map((e, i) => {\n                return (\n                    {\n                        name: e.child.first_name + \" \" + e.child.last_name,\n                        activity_title: e.activity.title,\n                        first_name: e.child.first_name,\n                        e_id: e.id,\n                    }\n                );\n            });\n        } else {\n            enrollment_data = [];\n        }\n        return (\n\n            <Grid container\n                justify=\"center\"\n                direction=\"column\"\n                spacing={24}\n                alignContent=\"center\"\n                style={{ minHeight: '100vh' }}\n            >\n            {(this.state.loaded && (enrollment_data.length === 0)) ? \n            <Grid item xs={12}>\n\n                <DoneOutlineIcon fontSize=\"large\" color=\"primary\" />\n                    <Typography component='h1'>\n                        No more pending enrollments in this batch!\n                    </Typography>\n                    <Fab variant=\"extended\" component={Link} to=\"/signup\">\n                        Sign up for more\n                    </Fab>\n            </Grid>\n            :\n            <MaterialTable\n                columns={[\n                    { title: 'Activity', field: 'activity_title' },\n                    { title: 'Student Name', field: 'name' },\n                ]}\n                data={enrollment_data}\n                title=\"Pending Enrollments\"\n                isLoading={!this.state.loaded}\n                options ={{\n                    actionsColumnIndex:-1,\n                    toolbar: false,\n                }}\n                actions={[\n                    rowData => ({\n                        icon: 'done_outline',\n                        tooltip: 'Confirm ' + rowData.first_name + \"'s enrollment in \" + rowData.activity_title,\n                        // disabled: rowData.birthYear >= 2000,\n                        onClick: (event, rowData) => {\n                            this.handleAction('confirm', rowData);\n                        },\n                        iconProps: {\n                            style: {\n                            fontSize: 30,\n                            color: 'green',\n                            },\n                        },\n                    }),\n                    rowData => ({\n                        icon: 'cancel',\n                        tooltip: 'Cancel ' + rowData.first_name + \"'s enrollment in \" + rowData.activity_title,\n                        onClick: (event, rowData) => {\n                            this.handleAction('cancel', rowData);\n                        },\n                        iconProps: {\n                            style: {\n                            fontSize: 30,\n                            color: 'red',\n                            },\n                        },\n                    }),\n                ]}\n            />}\n            </Grid>\n        );\n    }\n};\n\nconst SnackEnrollmentUpdate = withSnackbar(EnrollmentUpdate);\nexport default SnackEnrollmentUpdate;\n\nfunction SnackifiedEnrollmentUpdate() {\n    return (\n      <SnackbarProvider maxSnack={5}>\n        <SnackEnrollmentUpdate />\n      </SnackbarProvider>\n    );\n  }\n  \n//   export default SnackifiedEnrollmentUpdate;","import ActivitiesPage from 'components/Admin/ActivitiesPage';\nimport ActivityForm from 'components/Admin/ActivityForm';\nimport EnrollmentsPage from 'components/Admin/EnrollmentsPage';\nimport Homepage from 'components/Admin/Homepage';\nimport EnrollmentUpdate from 'components/Parent/EnrollmentUpdate'\n\nconst routes = [\n    {\n        path:\"/dashboard\",\n        base:\"/admin\",\n        name:\"Dashboard\",\n        component: Homepage\n    },\n    {\n        path:\"/enrollments\",\n        base:\"/admin\",\n        name:\"Enrollments\",\n        component: EnrollmentsPage\n    },\n    {\n        path:\"/new_session\",\n        base:\"/admin\",\n        name:\"Create Session\",\n        component: ActivityForm\n    },\n    {\n        path:\"/sessions\",\n        base:\"/admin\",\n        name:\"Sessions\",\n        component: ActivitiesPage\n    },\n    {\n        path:\"/update_enrollments/:token\",\n        base:\"/\",\n        component: EnrollmentUpdate,\n    }\n];\nexport default routes;","import React, { Component } from 'react';\n\nimport Topbar from 'components/Admin/Topbar';\nimport AuthorizedWrapper from 'components/Admin/AuthorizedWrapper';\nimport {Switch, Route} from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\n\nimport routes from 'routes.js';\n\n// function getAuthorizedWrapperFor(component) {\n//   return ((\n//     (props) => {\n//       <AuthorizedWrapper {...props}>\n//         <component />\n//       </AuthorizedWrapper>\n//     }\n//   )\n//   );\n// };\n\nconst admin_routes =(\n  <Switch>\n    {routes.map( (route, key) => {\n      if (route.base===\"/admin\") {\n        return (\n          <Route\n            path={route.base + route.path}\n            name={route.name}\n            render={(props) => <AuthorizedWrapper {...props}><route.component/></AuthorizedWrapper>}\n            key={key}\n          />\n        );\n      }\n    })}\n  </Switch>\n) ;\n\n\nclass Dashboard extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n  render() {\n    return (\n      <Grid container spacing={40}>\n        <Grid item xs={3}>\n          <Topbar routes={routes}/>\n        </Grid>\n        <Grid item xs={9}>\n          {admin_routes}\n        </Grid>\n      </Grid>\n\n    );\n  }\n}\n\nexport default Dashboard;","import React, {Component} from 'react';\nimport { Label, Container, Divider} from 'semantic-ui-react';\nimport {fetch_all_activities, create_enrollment} from 'middleend/fetchers';\nimport {\n    Form, Dropdown, \n  } from 'formsy-semantic-ui-react';\n\nimport nodemailer from 'nodemailer';\nimport * as emailjs from 'emailjs-com';\n\nexport default class Signup extends Component {\n    validate() {\n        return true;\n    };\n\n    onSubmit(event) {\n        console.log(event);\n        this.setState(event);\n        create_enrollment(\n            event, \n            response => {\n                this.setState({response: response}, console.log(response))\n            }\n        );\n    };\n\n    handleSubmit(event) {\n        console.log('hello');\n        return;\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            'child_first_name' : '',\n            'child_last_name' : '',\n            'parent_email' : '',\n            'activities' : '',\n            'possible_activities' : ''\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.different = this.different.bind(this);\n        // this.handleSubmit = this.handleSubmit.bind(this);\n        // this.MyForm = this.MyForm.bind(this);\n    };\n\n    organize_options(activities) {\n        var possible_activities;\n        if (activities == null) {\n            possible_activities = []\n        } else {\n            possible_activities = \n                activities.map((a, index)=> ({\n                    key: index,\n                    text: a.title,\n                    value: a.id\n                }));\n            this.setState({possible_activities: possible_activities}, console.log(this.state));\n        }\n\n    }\n\n    componentDidMount() {\n        fetch_all_activities(\n        response => { this.organize_options(response); },\n        error    => { this.setState({ placeholder: \"Something went wrong.\" }); },\n        );\n\n    }\n\n\n    print_state() {\n        console.log(this.state);\n    }\n    handleChange(e) {\n        const {value, name} = e.target;\n        this.setState({[name]:value}, this.print_state)\n\n    }\n    different(e) {\n        console.log(e);\n    }\n\n    sendEmail() {\n        var templateParams = {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.parentEmail\n        };\n        var template_id = \"confirmation\";\n\n        emailjs.send('gmail', template_id, templateParams, 'user_KIEZofYHFznf8LEaasyPx')\n            .then(function(response) {\n               console.log('SUCCESS!', response.status, response.text);\n            }, function(err) {\n               console.log('FAILED...', err);\n        });\n        this.form.reset();\n    }\n\n\n    render() {\n        var opts = {\n            'a' : 'Unlimited Pool and Ice Rink Access (all ages, do not select again if you already have access)',\n            'b' : 'Leather Crafting March 11-14 at KBM 3:30 - 5:30 p.m. Heritage Center Ages 6-18',\n            'c' : 'KBM Spring Break Rock Climbing Club mornings (10 a.m. to noon) March 11-14 for students age 8-14',\n            'd' : 'Spring Arts 2019',\n            'd1' : 'Relief Printing with Hailey Davis, 10 a.m. to noon, March 11-15 for ages 8 - 11',\n            'd2' : 'Explore Acrylics with Erica Ross, 1 - 3 p.m., March 11-15 for ages 8 - 11',\n            'd3' : 'Theatre Games with the ShakesBears 10 a.m. to noon March for ages 9 - 12',\n        };\n        var options = [\n            { text: opts['a'], value: 'a' },\n            { text: opts['b'], value: 'b' },\n            { text: opts['c'], value: 'c' },\n            { text: opts['d'] + \" - \" + opts['d1'], value: 'd1' },\n            { text: opts['d'] + \" - \" + opts['d2'], value: 'd2' },\n            { text: opts['d'] + \" - \" + opts['d3'], value: 'd3' },\n        ];\n        var layoutChoice = 'vertical';\n        // var s = this.onSubmit;\n        var h = this.handleChange;\n        var styles = {\n            root: {\n              marginTop: 18,\n              // padding: '0 24px 24px 24px',\n            },\n          \n            customErrorLabel: {\n              color: '#f00',\n              textAlign: 'center',\n            },\n          };\n        return (\n            <Container>\n                <Form\n                    ref={ ref => this.form = ref }\n                    onSubmit={this.onSubmit}\n                    // layout={layoutChoice}\n                >\n                    <Form.Group widths=\"equal\">\n                    {/* First name */}\n                    <Form.Input\n                        onChange={h}\n                        required\n                        name=\"child_first_name\"\n                        label=\"Child's First name\"\n                        placeholder=\"First Name\"\n                        validations=\"isWords\"\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        validationErrors={{\n                            isWords: 'No numbers or special characters allowed',\n                            isDefaultRequiredValue: 'First Name is Required',\n                        }}\n                    />\n                    {/* Last name */}\n                    <Form.Input\n                        onChange={h}\n                        name=\"child_last_name\"\n                        placeholder=\"Last name\"\n                        label=\"Child's Last name\"\n                        required\n                        validations=\"isWords\"\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        validationErrors={{\n                            isWords: 'No numbers or special characters allowed',\n                            isDefaultRequiredValue: 'Last Name is Required',\n                        }}\n                    />\n                    </Form.Group>\n\n                    <Divider/>\n\n                    {/* parent email */}\n                    <Form.Input\n                        onChange={h}\n                        name=\"parent_email\"\n                        placeholder=\"Email\"\n                        icon=\"mail\"\n                        label=\"Parent/Guardian Email\"\n                        required\n                        validations=\"isEmail\"\n                        validationErrors={{\n                            isEmail: 'This is not a valid email',\n                            isDefaultRequiredValue: 'Email is Required',\n                        }}\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        style={ styles.formElement }\n                    />\n                    <Divider/>\n                    <Dropdown\n                        onChange={this.different}\n                        name=\"activities\"\n                        label=\"Activities For Enrollment\"\n                        placeholder=\"Select Activity\"\n                        multiple\n                        search\n                        selection\n                        validations={{\n                            customValidation: (values, value) => !(!value || value.length < 1),\n                        }}\n                        validationErrors={{\n                            customValidation: 'Please select at least one activity',\n                        }}\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        options={ this.state.possible_activities }\n                    />\n                    <Form.Group>\n                        <Form.Button content=\"Submit\" color=\"green\"/>\n                        <Form.Button type=\"button\" content=\"Reset\" onClick={ () => this.form.reset() }/>\n                    </Form.Group>\n                </Form>\n\n            </Container>\n        );\n    }\n\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\n//component imports\nimport Login from 'components/Admin/Login';\nimport Dashboard from 'components/Admin/Dashboard';\nimport Signup from 'components/Parent/Signup';\n\n//routing support\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\n\nimport { SnackbarProvider, withSnackbar } from 'notistack';\n//theme for site\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport amber from '@material-ui/core/colors/amber';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport SnackEnrollmentUpdate from './components/Parent/EnrollmentUpdate';\nconst theme = createMuiTheme( // same theme, just dark\n  {\n  //   palette: {\n  //     primary: deepPurple,\n  //     secondary: amber,\n  //   },\n  // }\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n}\n);\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n    <Router>\n        <Switch>\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/admin\" component={Dashboard} />\n          <Route path=\"/update_enrollments/:token\" \n            render={\n                (props) => \n                <SnackbarProvider maxSnack={5}>\n                  <SnackEnrollmentUpdate {...props}/>\n                </SnackbarProvider>\n              }\n          />\n        </Switch>\n    </Router>\n    </MuiThemeProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}