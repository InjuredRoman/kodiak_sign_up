{"version":3,"sources":["Form.js","App.js","serviceWorker.js","index.js"],"names":["SignupForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","firstName","lastName","parentEmail","activities","onSubmit","bind","assertThisInitialized","event","_this2","console","log","setState","_this3","opts","options","text","value","s","react_default","a","createElement","Container","lib","ref","form","Group","widths","Input","required","name","label","placeholder","validations","errorLabel","Label","color","pointing","validationErrors","isWords","isDefaultRequiredValue","Divider","icon","isEmail","style","root","marginTop","customErrorLabel","textAlign","formElement","multiple","search","selection","customValidation","values","length","Button","content","type","onClick","reset","Component","App","Segment","inverted","Header","as","fontSize","fontWeight","marginBottom","Form_SignupForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a6e748c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { Label, Container, Divider} from 'semantic-ui-react';\n// import {withFormsy} from 'formsy-react';\n// import PropTypes from 'prop-types';\n\n/* eslint-disable import/extensions, import/no-unresolved, import/no-extraneous-dependencies */\n// import {\n//   Checkbox,\n//   CheckboxGroup,\n//   Input,\n//   RadioGroup,\n//   Row,\n//   Select,\n//   File,\n//   Textarea,\n//   Form,\n// } from 'formsy-react-components';\nimport {\n    Form, Input, TextArea, Checkbox, Radio, RadioGroup, Dropdown, Select, \n  } from 'formsy-semantic-ui-react';\n\nexport default class SignupForm extends Component{\n    validate() {\n        return true;\n    };\n\n    onSubmit(event) {\n        console.log(event);\n        this.setState(event, () => console.log(this.state));\n    };\n\n    handleSubmit(event) {\n        console.log('hello');\n        return;\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            'firstName' : '',\n            'lastName' : '',\n            'parentEmail' : '',\n            'activities' : ''\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        // this.handleSubmit = this.handleSubmit.bind(this);\n        // this.MyForm = this.MyForm.bind(this);\n    };\n    \n\n    render() {\n        var opts = {\n            'a' : 'Unlimited Pool and Ice Rink Access (all ages, do not select again if you already have access)',\n            'b' : 'Leather Crafting March 11-14 at KBM 3:30 - 5:30 p.m. Heritage Center Ages 6-18',\n            'c' : 'KBM Spring Break Rock Climbing Club mornings (10 a.m. to noon) March 11-14 for students age 8-14',\n            'd' : 'Spring Arts 2019',\n            'd1' : 'Relief Printing with Hailey Davis, 10 a.m. to noon, March 11-15 for ages 8 - 11',\n            'd2' : 'Explore Acrylics with Erica Ross, 1 - 3 p.m., March 11-15 for ages 8 - 11',\n            'd3' : 'Theatre Games with the ShakesBears 10 a.m. to noon March for ages 9 - 12',\n        };\n        var options = [\n            { text: opts['a'], value: 'a' },\n            { text: opts['b'], value: 'b' },\n            { text: opts['c'], value: 'c' },\n            { text: opts['d'] + \" - \" + opts['d1'], value: 'd1' },\n            { text: opts['d'] + \" - \" + opts['d2'], value: 'd2' },\n            { text: opts['d'] + \" - \" + opts['d3'], value: 'd3' },\n        ];\n        var layoutChoice = 'vertical';\n        var s = this.onSubmit;\n        var styles = {\n            root: {\n              marginTop: 18,\n              // padding: '0 24px 24px 24px',\n            },\n          \n            customErrorLabel: {\n              color: '#f00',\n              textAlign: 'center',\n            },\n          };\n        return (\n            <Container>\n                <Form\n                    ref={ ref => this.form = ref }\n                    onSubmit={s}\n                    // layout={layoutChoice}\n                >\n                    <Form.Group widths=\"equal\">\n                    {/* First name */}\n                    <Form.Input\n                        required\n                        name=\"firstName\"\n                        label=\"Child's First name\"\n                        placeholder=\"First Name\"\n                        validations=\"isWords\"\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        validationErrors={{\n                            isWords: 'No numbers or special characters allowed',\n                            isDefaultRequiredValue: 'First Name is Required',\n                        }}\n                    />\n                    {/* Last name */}\n                    <Form.Input\n                        name=\"lastName\"\n                        placeholder=\"Last name\"\n                        label=\"Child's Last name\"\n                        required\n                        validations=\"isWords\"\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        validationErrors={{\n                            isWords: 'No numbers or special characters allowed',\n                            isDefaultRequiredValue: 'Last Name is Required',\n                        }}\n                    />\n                    </Form.Group>\n\n                    <Divider/>\n\n                    {/* parent email */}\n                    <Form.Input\n                        name=\"parentEmail\"\n                        placeholder=\"Email\"\n                        icon=\"mail\"\n                        label=\"Parent/Guardian Email\"\n                        required\n                        validations=\"isEmail\"\n                        validationErrors={{\n                            isEmail: 'This is not a valid email',\n                            isDefaultRequiredValue: 'Email is Required',\n                        }}\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        style={ styles.formElement }\n                    />\n                    <Divider/>\n                    <Dropdown\n                        name=\"dropdownMultiple\"\n                        label=\"Activities For Enrollment\"\n                        placeholder=\"Select Activity\"\n                        multiple\n                        search\n                        selection\n                        validations={{\n                            customValidation: (values, value) => !(!value || value.length < 1),\n                        }}\n                        validationErrors={{\n                            customValidation: 'Please select at least one activity',\n                        }}\n                        errorLabel={ <Label color=\"red\" pointing/> }\n                        options={ options }\n                    />\n                    <Form.Group>\n                        <Form.Button content=\"Submit\" color=\"green\" />\n                        <Form.Button type=\"button\" content=\"Reset\" onClick={ () => this.form.reset() }/>\n                    </Form.Group>\n                </Form>\n\n            </Container>\n        );\n    }\n\n}\n\n","import React, { Component } from 'react';\nimport SignupForm from './Form.js';\nimport {Container, Header, Segment} from 'semantic-ui-react';\nimport './App.css';\nimport { Form, Field } from 'react-final-form';\n\n\nclass App extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n  render() {\n    return (\n      <div>\n      <Segment inverted>\n        <Container text>\n          <Header\n            as='h1'\n            textAlign='center'\n            inverted\n            content='KIBSD After School Activity Sign-up'\n            style={{\n              fontSize: '4em',\n              fontWeight: 'normal',\n              marginBottom: '3em',\n              marginTop: '2em',\n            }}\n          />\n        </Container>\n      </Segment>\n        <SignupForm />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}